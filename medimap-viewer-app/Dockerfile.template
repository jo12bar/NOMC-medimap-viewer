###############
# Build stage #
###############

FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:12-build as build

WORKDIR /usr/src/app

# Install build dependencies
RUN install_packages \
  apt-utils \
  clang \
  libxcb-image0 \
  xdg-utils \
  libdbus-1-dev \
  libgtk2.0-dev \
  libnotify-dev \
  libgnome-keyring-dev \
  libgconf2-dev \
  libasound2-dev \
  libcap-dev \
  libcups2-dev \
  libxtst-dev \
  libxss1 \
  libnss3-dev \
  libssh-4 \
  libexpat-dev \
  zip \
  unzip

COPY package*.json ./

RUN JOBS=MAX npm install

COPY . ./

# Build it
RUN npm run package

###########
# Runtime #
###########

FROM balenalib/%%BALENA_MACHINE_NAME%%-debian-node:12-run

WORKDIR /usr/src/app

# Install runtime dependencies
RUN install_packages \
  xserver-xorg-core \
  xserver-xorg-input-all \
  xserver-xorg-video-fbdev \
  xorg \
  libxcb-image0 \
  libxcb-util0 \
  xdg-utils \
  libdbus-1-3 \
  libgtk2.0 \
  libnotify4 \
  libgnome-keyring0 \
  libgconf-2-4 \
  libasound2 \
  libcap2 \
  libcups2 \
  libxtst6 \
  libxss1 \
  libnss3 \
  libsmbclient \
  libssh-4 \
  fbset \
  libexpat1 \
  libgtk-3-0

# Set up the 'startx' command to run like a kiosk
RUN echo '#!/usr/bin/env bash' > /etc/X11/xinit/xserverrc \
  && echo '' >> /etc/X11/xinit/xserverrc \
  && echo 'exec /usr/bin/X -s 0 dpms -nocursor -nolisten tcp "$@"' >> /etc/X11/xinit/xserverrc

# Copy the built app from the build step
COPY --from=build /usr/src/app/out/medimap-viewer-app-linux-armv7l/ ./

# Copy the start script
COPY start.bash ./

# Start app
CMD ["bash", "/usr/src/app/start.bash"]
