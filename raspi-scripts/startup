#!/usr/bin/env bash
# Mostly stolen from http://raspberrypi.stackexchange.com/a/43336/39077

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
INSTALL_DIR="${DIR}/.."
HOME_DIR="${INSTALL_DIR}/.."

set -e

info () {
  printf "\r  [ \033[00;34m..\033[0m ] $1\n"
}

user () {
  printf "\r  [ \033[0;33m??\033[0m ] $1\n"
}

success () {
  printf "\r\033[2K  [ \033[00;32mOK\033[0m ] $1\n"
}

fail () {
  printf "\r\033[2K  [\033[0;31mFAIL\033[0m] $1\n"
}

cd "${INSTALL_DIR}"

info "Moving any left-over test images back into ${INSTALL_DIR}/static/raspi-imported-photos"
info "so git doesn't freak out."
mv "${INSTALL_DIR}"/test-* "${INSTALL_DIR}/static/raspi-imported-photos" || true

info 'Disabling DPMS (Energy Star) features'
xset -dpms

info 'Disabling screensaver'
xset s off

info 'Stopping video device from blanking'
xset s noblank

info 'Waiting for a network connection...'
# Keep trying to ping www.example.com until we get a response, then break from
# the loop.
while true; do
  ping -c1 www.example.com &> /dev/null && break
done

info 'Checking to see if startup script has changed...'
current_git_sha=$(git rev-parse HEAD)
curl_url="https://api.github.com/repos/jo12bar/medimap-viewer/compare/jo12bar:${current_git_sha}...jo12bar:HEAD"
jq_program="if .files[].filename == \"raspi-scripts/startup\" then true else false end"
changed_files_processed=$(curl -H 'Accept: application/vnd.github.v3+json' "${curl_url}" | jq "${jq_program}")
if [[ "${changed_files_processed}" == *"true"* ]]; then
  info 'Startup script has been changed!'
  info 'Going to update code, then restart.'
  git pull origin master
  reboot
else
  info 'Startup file unchanged!'
fi

# Check for local excutable startup file in $INSTALL_DIR/local
if [ -x "${INSTALL_DIR}/local/startup.local.bash" ]; then
  info "Executing ${INSTALL_DIR}/local/startup.local.bash"
  "${INSTALL_DIR}/local/startup.local.bash"
fi

# Install yarn if it isn't already installed.
command -v yarn >/dev/null 2>&1 || {
  info "Looks like the yarn package manager isn't installed!"
  info 'Installing...'
  curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
  echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  sudo apt update
  sudo apt install -y yarn
  success 'Installed yarn!'
}

info 'Updating & rebuilding code'
git pull origin master
yarn
yarn build

info "Temporarily moving test images out of ${INSTALL_DIR}/static/raspi-imported-photos"
mv "${INSTALL_DIR}/static/raspi-imported-photos"/test-* "${INSTALL_DIR}"

info "rsync-ing images from /media/usb0 to ${INSTALL_DIR}/static/raspi-imported-photos"
rsync -vhr --delete \
  --exclude='*/' \
  --exclude='test-*' \
  --exclude='README.md' \
  --include='*.jpg' \
  --include='*.jpeg' \
  --include='*.JPG' \
  --include='*.JPEG' \
  --include='*.png' \
  --include='*.gif' \
  '/media/usb0/' "${INSTALL_DIR}/static/raspi-imported-photos/"

info 'Starting server in background'
npm run start:production > "$INSTALL_DIR/server.log" 2>&1 &

info 'Giving server time to start up...'
sleep 60

# Start browser
"$DIR/startup-subscript" &
startup_subscript_PID=$!

info 'Giving browser time to startup & fullscreening'
xte 'sleep 60' 'key F11' > "${INSTALL_DIR}/xte.log" 2>&1

# Wait for startup-subscript to finish before exiting
FAIL=0

wait $startup_subscript_PID || let 'FAIL+=1'

if [ "$FAIL" == "0" ]; then
  success 'Chromium closed with no errors!'
  user 'Press any key to continue...'
  read -n1 -r _
  exit 0
else
  fail 'Chromium closed with errors! Check the logs!'
  user 'Press any key to continue...'
  read -n1 -r _
  exit 1
fi
